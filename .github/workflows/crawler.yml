name: Crawler
on: 
  push:
  schedule:
    - cron:  "0 20 * * *" # 實際執行時間是這個時間加八小時
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      # ----------------------------------------------------------------
      
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      # ----------------------------------------------------------------

      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      # ----------------------------------------------------------------

      - name: Cache
        id: cache
        uses: actions/cache@v3
        env:
          cache-name: cache
        with:
          path: |
            cache
            output
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('cache/cache-trigger.txt') }}-${{ hashFiles('output/cache-trigger.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # ----------------------------------------------------------------

      # - name: Clean Cache
      #   run: |
      #     rm -rf /output/*
      #     rm -rf /cache/*
      #     docker rmi -f $(docker images -aq)
      #     docker network prune -f
      #     docker volume prune -f

      - name: Prepare Cache
        run: |
          mkdir -p cache
          echo `date` > cache/cache-trigger.txt
          mkdir -p output
          echo `date` > output/cache-trigger.txt

      - name: main
        run: |
          docker-compose up

      # ----------------------------------------------------------------

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: output # The folder the action should deploy.
